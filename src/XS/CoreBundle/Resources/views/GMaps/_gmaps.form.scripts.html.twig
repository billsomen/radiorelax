<script>
  // This example displays an address form, using the autocomplete feature
  // of the Google Places API to help users fill in the information.

  // This example requires the Places library. Include the libraries=places
  // parameter when you first load the API. For example:
  // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

  var placeSearch, autocomplete;
  var componentForm = {
    street_number: 'name',
    route: 'name',
    premise: 'name',
    locality: 'name',
    administrative_area_level_1: 'name',
    administrative_area_level_2: 'name',
    country: 'name',
    postal_code: 'name'
  };

  function initAutocomplete() {
    // Create the autocomplete object, restricting the search to geographical
    // location types.
    autocomplete = new google.maps.places.Autocomplete(
      /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
      {types: ['geocode']});

    // When the user selects an address from the dropdown, populate the address
    // fields in the form.
    autocomplete.addListener('place_changed', fillInAddress);
  }

  function fillInAddress() {
    // Get the place details from the autocomplete object.
    var place = autocomplete.getPlace();
    document.getElementById('lat').value = place.geometry.location.lat();
    document.getElementById('lng').value = place.geometry.location.lng();
    document.getElementById('place_id').value = place.place_id;
    document.getElementById('formatted_address').value = place.formatted_address;

    for (var component in componentForm) {
      document.getElementById('sn_'+component).value = '';
      document.getElementById('sn_'+component).disabled = false;
      document.getElementById('ln_'+component).value = '';
      document.getElementById('ln_'+component).disabled = false;
    }

    // Get each component of the address from the place details
    // and fill the corresponding field on the form.
    for (var i = 0; i < place.address_components.length; i++) {
      var addressType = place.address_components[i].types[0];
      if (componentForm[addressType]) {
//        for short
        var val = place.address_components[i]['short_'+componentForm[addressType]];
        document.getElementById('sn_'+addressType).value = val;
//        for long
        var val = place.address_components[i]['long_'+componentForm[addressType]];
        document.getElementById('ln_'+addressType).value = val;
      }
    }
  }

  // Bias the autocomplete object to the user's geographical location,
  // as supplied by the browser's 'navigator.geolocation' object.
  function geolocate() {
    if (!navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        var geolocation = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        var circle = new google.maps.Circle({
          center: geolocation,
          radius: position.coords.accuracy
        });

        autocomplete.setBounds(circle.getBounds());
      });
    }
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDKgXUS33rXyjnJYAC0uqREbJ1hVQi4Q48&libraries=places&callback=initAutocomplete" async defer></script>